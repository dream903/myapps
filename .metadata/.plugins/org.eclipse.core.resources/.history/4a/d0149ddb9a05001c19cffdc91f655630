package arraytest;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.List;
import java.util.stream.Stream;
public class ArrayExmp {

	
	
	   public static void DoPrint( Base o ) {
	        o.Print();   
	    }
     

		public static void main(String[] args)
//		, Object[] testStrings)
		
		
		{	
			
			    
			        Base x = new Base();
			        Base y = new Derived();
			        Derived z = new Derived();
			        
			        
			        DoPrint(x);
			        DoPrint(y);
			        DoPrint(z);
//			    
			        
			        
			        
			        
			        
			        
			        
			        
			        
			        
			        
			        
			        
			        
			        
			        
			        
//			 Derived b = new Derived();
//		     b.show();
//		     
//		     Base b1= new Derived();
//		     b1.show();
//		 -------    
		     
			Parent P=new Parent();
//			Child child=new Child();
//			Parent c=new Child();
//			
				
			Object[]  ao    ;    // array of Object
			Collection[] ca;  // array of Collection
			

			
			int intArray[]; 
			intArray = new int[20];  // allocating memory to array
//			int[] intArray2; 
			 int[] intArray2 = new int[]{ 1,2,3,4,5,6,7,8,9,10 }; 
			 int[] arr = new int[2];
		        arr[0] = 10;
		        arr[1] = 20;
		  
		        try {
					for (int i = 0; i <= arr.length; i++) {
					    System.out.println(arr[i]);
   }
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
                      
			byte byteArray[];
			short shortsArray[];
			boolean booleanArray[];
			long longArray[];
			float floatArray[];
			double doubleArray[];
			char charArray[];
			
			
			
			String s1="a";
			String s2=new String();
			String s3="b";
//			int x[]= {1,2,3};
//			Stream.of(s1,s2,s3).forEach(System.out::println);
//			Stream.of(9,8,7).forEach(System.out::println)
//			System.out.println(Stream.of(9,8,7).min(Integer::compareTo).get());
//			
//			System.out.println(Stream.of(9,8,7).mapToInt((x)->x).average().getAsDouble());
//				
//			System.out.println(Stream.of(9,8,7).anyMatch((x)->x>10));
//			System.out.println("hello");
//			System.out.println(Stream.of(9,8,7));
//			Arrays.sort(testStrings,(String s1,String s2)->{return(s1.length()-s2.length());}
			
//					);
	}
		}
		
	
	




